--- root_last_edition.py	2011-09-28 21:00:39.333901000 -0400
+++ root_now.py	2011-09-28 21:01:17.913901001 -0400
@@ -3641,39 +3641,61 @@
         u.subno = min[0]
         nob = u.nobility*3 + u.subno
         return dict(nobility=nob,battleresult=battleresult,subno=u.subno, defence=u.defencepower, minus=min[1], corn=u.corn, cae = u.cae, inf = u.infantrypower, cav = u.cavalrypower) 
-    def callost(myFull, eneFull, myPure, enePure, type):
-    	lost = [0, 0]
-    	attackLost = [[40, 50, 70, 90], [15, 20, 20, 20] ]
+    def callost(poweru,powere,poweruu,poweree,type):#poweru，powere为加成后兵力，poweruu，poweree为原始战斗力
+        lost=[0,0]
+        constu=0
+        conste=0
+        attackLost = [[40, 50, 70, 90], [15, 20, 20, 20] ]
         defenceLost = [[35, 35, 35, 35], [20, 30, 45, 45] ]
-        attackPow = [myFull, myPure]
-        defencePow = [eneFull, enePure]
-        if type == 0:
-        	attackPow = [eneFull, enePure]
-        	defencePow = [myFull, myPure]
-        attWin = 1
-        winPow = attackPow
-        losePow = defencePow
-        if attackPow[0] < defencePow[0]:
-			attWin = 0
-			winPow = defencePow
-			losePow = attackPow
-		        	
         situation = 0
-        stage = [2, 10, 100]
-        for i in stage:
-        	if winPow[0] < losePow[0]*i:
-        		break
-        	situation++
-        #attack power lost 
-        lost[1]=int((defencePow[1]*defenceLost[attWin][situation] + defenceLost[attWin][situation]-1)/100)#defence lost
-        lost[0]=int((attackPow[1]*attackLost[attWin][situation] + attackLost[attWin][situation]-1)/100)#attack won
-        if type == 0
-        	temp = lost[0]
-        	lost[0] = lost[1]
-        	lost[1] = lost[0]
-        print "lost is my " + str(lost[0]) + ' ene ' + str(lost[1])
-        return lost     
-	def getexp(kill):#
+        if type==1:#poweru为进攻兵力
+            if poweru>powere:#attack succress
+                if poweru>powere and poweru<=2*powere:
+                    situation = 0
+                elif poweru>2*powere and poweru<=10*powere:
+                    situation = 1
+                elif poweru>10*powere and poweru<=100*powere:
+                    situation = 2
+                else:
+                    situation = 3
+                lost[1]=int((poweree*defenceLost[1][situation] + defenceLost[1][situation]-1)/100)#defence lost
+                lost[0]=int((poweree*attackLost[1][situation] + attackLost[1][situation]-1)/100)#attack won
+            else:
+                if powere<=2*poweru:
+                    situation = 0
+                elif powere>2*poweru and powere<=10*poweru:
+                    situation = 1
+                elif powere>10*poweru and powere<=100*poweru:
+                    situation = 2
+                else:
+                    situation = 3
+                lost[1]=int((poweruu*defenceLost[0][situation] + defenceLost[0][situation]-1)/100)#defence lost
+                lost[0]=int((poweruu*attackLost[0][situation] + attackLost[0][situation]-1)/100)#attack won
+        else:
+            if poweru>powere:
+                if poweru>powere and poweru<=2*powere:
+                    situation = 0
+                elif poweru>2*powere and poweru<=10*powere:
+                    situation = 1
+                elif poweru>10*powere and poweru<=100*powere:
+                    situation = 2
+                else:
+                    situation = 3
+                lost[1]=int((poweree*defenceLost[0][situation] + defenceLost[0][situation]-1)/100)#defence lost
+                lost[0]=int((poweree*attackLost[0][situation] + attackLost[0][situation]-1)/100)#attack won
+            else:
+                if powere<=2*poweru:
+                    situation = 0
+                elif powere>2*poweru and powere<=10*poweru:
+                    situation = 1
+                elif powere>10*poweru and powere<=100*poweru:
+                    situation = 2
+                else:
+                    situation = 3
+                lost[1]=int((poweruu*defenceLost[1][situation] + defenceLost[1][situation]-1)/100)#defence lost
+                lost[0]=int((poweruu*attackLost[1][situation] + attackLost[1][situation]-1)/100)#attack won
+        return lost        
+    def getexp(kill):#
         return 0
         """
         exp=0
